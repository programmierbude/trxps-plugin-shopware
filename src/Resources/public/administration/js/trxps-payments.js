(this.webpackJsonp=this.webpackJsonp||[]).push([["trxps-payments"],{"/sJ1":function(e){e.exports=JSON.parse('{"trxps-payments":{"general":{"mainMenuItemGeneral":"Trxps Payments","descriptionTextModule":"Trxps Payments","refundThroughTrxps":"Refund through Trxps","shipThroughTrxps":"Ship through Trxps"},"modals":{"refund":{"title":"Refund an order line item through Trxps","content":"Fill out the quantity of this item ({refundableQuantity} out of {quantity} left to refund) to be refunded to the customer.","quantityPlaceholder":"The quantity to refund...","createCreditText":"Create a credit item for this refund.","confirmButton":"Refund","cancelButton":"Do not refund"},"shipping":{"title":"Ship an order line item through Trxps","content":"Fill out the quantity of this item ({shippableQuantity} out of {quantity} left to ship) to be shipped to the customer.","quantityPlaceholder":"The quantity to ship...","confirmButton":"Ship","cancelButton":"Do not ship"}}},"sw-order":{"detailExtended":{"columnRefunded":"Refunded","columnShipped":"Shipped","labelTrxpsOrderId":"Trxps Order ID","totalRefunds":"Refunded amount ({quantity} items)","totalShipments":"Shipped amount ({quantity} items)"}},"sw-payment":{"testButton":"Test","testApiKeys":{"title":"Trxps Payments","apiKey":"API key","isValid":"is valid","isInvalid":"is invalid"}},"sw-customer":{"extendedInfo":{"labelPreferredIdealIssuer":"Preferred iDeal issuer"}}}')},"64kf":function(e,t){e.exports='{% block sw_customer_base_metadata_default_payment %}\n    {% parent %}\n    <sw-description-list v-if="preferredIdealIssuer">\n        <dt class="sw-customer-base-info__label">{{ $tc(\'sw-customer.extendedInfo.labelPreferredIdealIssuer\') }}</dt>\n        <dd class="sw-customer-base__label-preferred-ideal-issuer">\n            {{ preferredIdealIssuer }}\n        </dd>\n    </sw-description-list>\n{% endblock %}'},"9RU8":function(e,t){e.exports='{% block sw_order_detail_base_line_items_summary_entries %}\n    {% parent %}\n    <dt v-if="refundedItems > 0"><strong>{{ $tc(\'sw-order.detailExtended.totalRefunds\', 0, { quantity: refundedItems }) }}</strong></dt>\n    <dd v-if="refundedItems > 0"><strong>{{ refundedAmount | currency(order.currency.shortName) }}</strong></dd>\n    <dt v-if="shippedItems > 0"><strong>{{ $tc(\'sw-order.detailExtended.totalShipments\', 0, { quantity: shippedItems }) }}</strong></dt>\n    <dd v-if="shippedItems > 0"><strong>{{ shippedAmount | currency(order.currency.shortName) }}</strong></dd>\n{% endblock %}'},WgpT:function(e,t){e.exports="{% block sw_order_detail_base_secondary_info_payment %}\n    {% parent %}\n\n    <template v-if=\"trxpsOrderId\">\n        <dt>{{ $tc('sw-order.detailExtended.labelTrxpsOrderId') }}</dt>\n        <dd>{{ trxpsOrderId }}</dd>\n    </template>\n{% endblock %}"},brXV:function(e,t){e.exports="{#{% sw_extends 'administration/module/sw-plugin/component/sw-plugin-config/sw-plugin-config.html.twig' %}#}\n\n{% block sw_plugin_config_actions_abort %}\n    {% parent %}\n\n    {% block sw_plugin_config_actions_test %}\n    <sw-button @click=\"onTestButtonClicked\" v-if=\"domain === 'TrxpsPayments.config'\">\n        {{ $tc('sw-payment.testButton') }}\n    </sw-button>\n    {% endblock %}\n{% endblock %}"},cAZk:function(e){e.exports=JSON.parse('{"trxps-payments":{"general":{"mainMenuItemGeneral":"Trxps Payments Zahlungen","descriptionTextModule":"Trxps Payments Zahlungen","refundThroughTrxps":"Rückerstattung über Trxps","shipThroughTrxps":"Versand bei Trxps melden"},"modals":{"refund":{"title":"Bestellposition über Trxps rückerstatten","content":"Menge dieser Bestellposition ({refundableQuantity} von {quantity} für Rückerstattung möglich) für die Rückerstattung an den Kunden.","quantityPlaceholder":"Menge für Rückerstattung...","createCreditText":"Create a credit item for this refund.","confirmButton":"Rückerstatten","cancelButton":"Abbrechen"},"shipping":{"title":"Versand der Bestellposition an Trxps melden","content":"Menge dieser Bestellposition ({shippableQuantity} von {quantity} für Versand noch möglich), die an den Kunden versandt wurden.","quantityPlaceholder":"Menge der versendeten Ware...","confirmButton":"Versandmeldung bei Trxps","cancelButton":"Abbrechen"}}},"sw-order":{"detailExtended":{"columnRefunded":"Rückerstattet","columnShipped":"Versandt","labelTrxpsOrderId":"Trxps Bestell ID","totalRefunds":"Rückerstattete Menge ({quantity} Stück)","totalShipments":"Versandte Menge ({quantity} Stück)"}},"sw-payment":{"testButton":"Prüfung","testApiKeys":{"title":"Trxps Payments","apiKey":"API Schlüssel","isValid":"ist gültig","isInvalid":"ist gültig"}},"sw-customer":{"extendedInfo":{"labelPreferredIdealIssuer":"Bevorzugter iDeal Aussteller"}}}')},mrmX:function(e,t){e.exports='{% block sw_order_line_items_grid_grid_actions %}\n    {% parent %}\n\n<template #action-modals="{ item }">\n    <sw-modal v-if="showRefundModal === item.id"\n              @modal-close="onCloseRefundModal"\n              :title="$tc(\'trxps-payments.modals.refund.title\')"\n              variant="small">\n\n        <p>\n            {{ $tc(\'trxps-payments.modals.refund.content\', 0, { quantity: item.quantity, refundableQuantity: refundableQuantity(item) }) }}\n        </p>\n\n        <br />\n\n        <sw-number-field numberType="integer"\n                         size="medium"\n                         :step="1"\n                         :placeholder="$tc(\'trxps-payments.modals.refund.quantityPlaceholder\')"\n                         :min="0"\n                         :value="1"\n                         :max="refundableQuantity(item)"\n                         v-model="quantityToRefund">\n        </sw-number-field>\n\n        <template slot="modal-footer">\n            <sw-button @click="onCloseRefundModal" size="small">\n                {{ $tc(\'trxps-payments.modals.refund.cancelButton\') }}\n            </sw-button>\n            <sw-button @click="onConfirmRefund(item)" variant="primary" size="small">\n                {{ $tc(\'trxps-payments.modals.refund.confirmButton\') }}\n            </sw-button>\n        </template>\n    </sw-modal>\n</template>\n{% endblock %}\n\n{% block sw_order_line_items_grid_grid_actions_show %}\n    {% parent %}\n\n<sw-context-menu-item :disabled="!isRefundable(item)"\n                      icon="default-arrow-360-left"\n                      @click="onRefundItem(item)">\n    {{ $tc(\'trxps-payments.general.refundThroughTrxps\') }}\n</sw-context-menu-item>\n{% endblock %}'},wtPu:function(e,t,n){"use strict";n.r(t);const s=Shopware.Classes.ApiService;var r=class extends s{constructor(e,t,n="trxps"){super(e,t,n)}testApiKeys(e={liveApiKey:null,testApiKey:null}){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/config/test-api-keys`,JSON.stringify(e),{headers:t}).then((e=>s.handleResponse(e)))}};const i=Shopware.Classes.ApiService;var o=class extends i{constructor(e,t,n="trxps"){super(e,t,n)}refund(e={itemId:null,versionId:null,quantity:null,createCredit:null}){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/refund`,JSON.stringify(e),{headers:t}).then((e=>i.handleResponse(e)))}total(e={orderId:null}){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/refund/total`,JSON.stringify(e),{headers:t}).then((e=>i.handleResponse(e)))}};const d=Shopware.Classes.ApiService;var a=class extends d{constructor(e,t,n="trxps"){super(e,t,n)}ship(e={itemId:null,versionId:null,quantity:null}){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/ship`,JSON.stringify(e),{headers:t}).then((e=>d.handleResponse(e)))}total(e={orderId:null}){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/ship/total`,JSON.stringify(e),{headers:t}).then((e=>d.handleResponse(e)))}};const{Application:l}=Shopware;l.addServiceProvider("TrxpsPaymentsConfigService",(e=>{const t=l.getContainer("init");return new r(t.httpClient,e.loginService)})),l.addServiceProvider("TrxpsPaymentsRefundService",(e=>{const t=l.getContainer("init");return new o(t.httpClient,e.loginService)})),l.addServiceProvider("TrxpsPaymentsShippingService",(e=>{const t=l.getContainer("init");return new a(t.httpClient,e.loginService)}));var u=n("64kf"),p=n.n(u);const{Component:c}=Shopware;c.override("sw-customer-base-info",{template:p.a,computed:{preferredIdealIssuer(){return this.customer&&this.customer.customFields&&this.customer.customFields.trxps_payments&&this.customer.customFields.trxps_payments.preferred_ideal_issuer?this.customer.customFields.trxps_payments.preferred_ideal_issuer:null}}});var m=n("mrmX"),h=n.n(m);const{Component:f,Service:y}=Shopware;f.override("sw-order-line-items-grid",{template:h.a,inject:["TrxpsPaymentsRefundService"],data:()=>({isLoading:!1,selectedItems:{},showRefundModal:!1,createCredit:!1,quantityToRefund:1,refundQuantity:0}),computed:{getLineItemColumns(){const e=this.$super("getLineItemColumns");return e.push({property:"customFields.refundedQuantity",label:this.$tc("sw-order.detailExtended.columnRefunded"),allowResize:!1,align:"right",inlineEdit:!1,width:"100px"}),e}},methods:{onRefundItem(e){this.showRefundModal=e.id},onCloseRefundModal(){this.showRefundModal=!1},onConfirmRefund(e){this.showRefundModal=!1,this.quantityToRefund>0&&this.TrxpsPaymentsRefundService.refund({itemId:e.id,versionId:e.versionId,quantity:this.quantityToRefund,createCredit:this.createCredit}).then(document.location.reload()),this.quantityToRefund=0},isRefundable(e){let t=!1;return"product"===e.type&&(null==e.customFields||void 0===e.customFields.refundedQuantity||parseInt(e.customFields.refundedQuantity,10)<e.quantity)&&(t=!0),t},refundableQuantity:e=>null!==e.customFields&&null!==e.customFields.refundedQuantity?e.quantity-parseInt(e.customFields.refundedQuantity,10):e.quantity}});var g=n("WgpT"),x=n.n(g);const{Component:w}=Shopware;w.override("sw-order-user-card",{template:x.a,computed:{trxpsOrderId(){return this.currentOrder&&this.currentOrder.customFields&&this.currentOrder.customFields.trxps_payments&&this.currentOrder.customFields.trxps_payments.order_id?this.currentOrder.customFields.trxps_payments.order_id:null}}});var v=n("9RU8"),b=n.n(v);const{Component:I}=Shopware;I.override("sw-order-detail-base",{template:b.a,props:{orderId:{type:String,required:!0}},data:()=>({refundedAmount:0,refundedItems:0,shippedAmount:0,shippedItems:0}),inject:["TrxpsPaymentsRefundService","TrxpsPaymentsShippingService"],mounted(){""!==this.orderId&&(this.TrxpsPaymentsRefundService.total({orderId:this.orderId}).then((e=>{this.refundedAmount=e.amount,this.refundedItems=e.items})),this.TrxpsPaymentsShippingService.total({orderId:this.orderId}).then((e=>{this.shippedAmount=e.amount,this.shippedItems=e.items})))}});var T=n("brXV"),_=n.n(T);const{Component:S,Mixin:R}=Shopware;S.override("sw-plugin-config",{template:_.a,inject:["TrxpsPaymentsConfigService"],mixins:[R.getByName("notification")],methods:{onTestButtonClicked(){let e=this;const t=document.querySelector('input[name="TrxpsPayments.config.liveApiKey"]'),n=document.querySelector('input[name="TrxpsPayments.config.testApiKey"]'),s=t?t.value:null,r=n?n.value:null;this.TrxpsPaymentsConfigService.testApiKeys({liveApiKey:s,testApiKey:r}).then((s=>{s.results,s.results.forEach((function(s){let r={title:e.$tc("sw-payment.testApiKeys.title"),message:`${e.$tc("sw-payment.testApiKeys.apiKey")} "${s.key}" (${s.mode}) ${!0===s.valid?e.$tc("sw-payment.testApiKeys.isValid"):e.$tc("sw-payment.testApiKeys.isInvalid")}.`},i="live"===s.mode?t:n;i&&i.parentNode.parentNode.classList.remove("has--error"),!0===s.valid?e.createNotificationSuccess(r):(e.createNotificationError(r),i&&i.parentNode.parentNode.classList.add("has--error"))}))}))}}});var P=n("cAZk"),k=n("/sJ1");const{Module:C}=Shopware;C.register("trxps-payments",{type:"plugin",name:"TrxpsPayments",title:"trxps-payments.general.mainMenuItemGeneral",description:"trxps-payments.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#333",icon:"default-action-settings",snippets:{"de-DE":P,"en-GB":k}})}},[["wtPu","runtime"]]]);